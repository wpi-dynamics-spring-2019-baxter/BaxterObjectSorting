<?xml version="1.0" encoding="utf-8"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="verbose" default="true"/>
  <arg name="debug" default="false"/>

  <!-- These arguments load the electric grippers, for example left_electric_gripper:=true -->
  <arg name="left_electric_gripper" default="true"/>
  <arg name="right_electric_gripper" default="true"/>

  <!-- Load the URDF into the ROS Parameter Server -->
  <!-- This xacro will pull in baxter_base.urdf.xacro, left_end_effector.urdf.xacro,
                                           and right_end_effector.urdf.xacro
       Note: if you set this to false, you MUST have set the robot_description prior
             to launching baxter_world -->
  <arg name="load_robot_description" default="true"/>
  <param if="$(arg load_robot_description)" name="robot_description"
      command="$(find xacro)/xacro --inorder $(find baxter_description)/urdf/baxter.urdf.xacro gazebo:=true
      left_electric_gripper:=$(arg left_electric_gripper) right_electric_gripper:=$(arg right_electric_gripper)"/>

  <!-- We resume the logic in empty_world.launch, changing the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find simulator)/worlds/baxter_object_sorting.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the software version into the ROS Parameter Server -->
  <param name="rethink/software_version" value="1.2.0" />

  <!-- Publish a static transform between the world and the base of the robot and also kinect -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_world" args="0 0 0 0 0 0 1 world base" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="kinect_to_world" args="0.25 0 0.94 -1.57079632679 0 3.61238898038 world camera_link" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-param robot_description -urdf -z 0.93 -model baxter
              -J baxter::right_s0 0.5
              -J baxter::right_s1 0.0
              -J baxter::right_e0 0.0
              -J baxter::right_e1 0.0
              -J baxter::right_w0 0.0
              -J baxter::right_w1 0.0
              -J baxter::right_w2 0.0
              -J baxter::left_s0 -0.5
              -J baxter::left_s1 0.0
              -J baxter::left_e0 0.0
              -J baxter::left_e1 0.0
              -J baxter::left_w0 0.0
              -J baxter::left_w1 0.0
              -J baxter::left_w2 0.0" />

  <!-- ros_control baxter launch file -->
  <include file="$(find baxter_sim_hardware)/launch/baxter_sdk_control.launch">
      <arg name="right_electric_gripper" value="$(arg right_electric_gripper)"/>
      <arg name="left_electric_gripper" value="$(arg left_electric_gripper)"/>
      <arg name="gui" value="$(arg gui)" />
  </include>

  <!-- enable baxter -->
  <node name="enable_robot" pkg="baxter_tools" type="enable_robot.py" output="screen" args="-e"/>

  <!--octopmap-->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
          <param name="resolution" value="0.05" />
          <param name="frame_id" type="string" value="base" />
          <param name="sensor_model/max_range" value="5.0" />
          <remap from="cloud_in" to="/camera/depth/points" />
  </node>

</launch>
